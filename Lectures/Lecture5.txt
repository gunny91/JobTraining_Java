김철수와 박영희가 동일 은행에서 통장을 개설합니다.
통장은 예금주, 계좌 번호, 예치금을 가지고 있습니다.

Account01.java
-------------------------------------------
AccountMain1.java, Account1.java

클래스 구현 절차
step 1 : 클래스 정의/선언
step 2 : 객체 생성
step 3 : 변수에 값을 할당
step 4 : 데이터에 대한 출력

클래스 
	개발자가 만드는 새로운 데이터 유형
	객체를 만들어 내기 위한 template

클래스 구성 요소 = 변수 + 메소드 + 생성자

step 1 : 클래스 생성 문법
	class 이름{
		변수
		메소드
		생성자	
	}
클래스 이름은 통상적으로 첫 글자를 대문자로 적는 경향이 있다.

step 2 : 객체 생성
	클래스이름 객체이름 = new 생성자이름();
	클래스 이름은 생성자 이름과 동일해야 한다.

step 3 : 변수에 값을 할당
	. : 멤버 할당 연산자
	객체가 가진 변수들에 접근을 하기 위한 연산자
	객체이름.변수 = 값 ; //writer

step 4 : 데이터에 대한 출력	
	syso(객체이름.변수) ; //reader

변수 : 상태 값을 저장하고 있는 곳
	속성(property)

메소드 : 무엇인가를 수행하기 위한 행위

클래스 내의 변수 = 멤버 변수 = 인스턴스 변수
특징
	초기 값이 존재한다.
	정수(0), 실수(0.0), 클래스타입(null), 진위(false) 등등

지역 변수 : 메소드 내에서 정의된 변수와 매개 변수
	반드시 초기화를 수행해야 한다.

static 변수 = 클래스 변수
	여러 객체가 공유할 목적으로 단, 1개만 생성
	static 키워드가 붙고, 클래스 내부에 정의된다.
	초기 값은 인스턴스 변수와 동일한 개념이다.
	클래스 이름으로 접근이 가능하다.

Math 클래스 내에 있는 모든 메소드는 static 메소드이다.

-------------------------------------------
AccountMain2.java, Account2.java

생성자 : 
	인스턴스 변수를 초기화하거나 어떤 기본 작업을 미리 하기 위하여 제공해주는 메소드

기본 생성자 : 눈에 보이지 않는 매개 변수가 없는 생성자

초기화 하려면 개발자가 직접 생성자를 구현하면 된다.
개발자가 직접 생성하면 보이지 않던 생성자는 사라진다.

생성자 구현 방법
	반환타입 이름(매개변수){
		//어쩌구 저저꾸
	}
주의 사항
	생성자의 이름은 반드시 클래스의 이름과 동일해야 한다.
	반환 타입을 명시하지 마라

	Account2(){
	}

오버로딩
	메소드/생성자의 이름은 동일하게 하되, 매개 변수의 갯수나 타입을 다르게 지정하는 것
	이론적으로 무한개가 가능하다.
	중복 정의

this 키워드
	인스턴스 자기 자신을 지칭하는 참조형 변수
	주로, 지역 변수의 이름과 인스턴스 변수의 이름을 구분할 용도로 사용한다.
	인스턴스 변수나 메소드에 붙인다.

-------------------------------------------
AccountMain3.java, Account3.java

접근 지정자(제한자)
	변수/메소드/클래스의 접근 범위를 어디까지 오픈 할 것인가를 지정하는 것
	private, 기본, protected, public
	private : 클래스 내부에서만 접근이 가능
	기본 : 동일 패키지에서 접근이 가능 
	public : 임의의 위치에서 접근이 가능
-------------------------------------------
캡슐화 : 
	private 변수는 외부에서 접근이 안되는 데, 이것은 getter/setter으로 처리 가능하다.

setter : 
	private 변수의 값을 변경해주는 메소드(입/출금)

	void set + 변수첫글자를대문자로변경(변수의_자료형){
	
	}

getter
	private 변수의 값을 읽어 내는 메소드(잔액 조회)

	변수의_자료형 get + 변수첫글자를대문자로변경(){
		return 해당변수 ;
	}

-------------------------------------------
SaramMain1.java, Saram1.java

오늘 수업 내용을 토대로 다음과 같은 클래스를 구현해보세요.
철수에 대한 정보
이름(name) : 김철수
키(height) : 172.5
몸무게(weight) : 72.5
취미(hobby) : 당구
혈액형(blood) : AB
-------------------------------------------