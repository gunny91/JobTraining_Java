연산자는 우선 순위가 있다.
<--- 높음             낮음 -->
단항 산술 이항 관계 비트 논리 조건 대입



pkg02 패키지 생성

산술 : 가감승제, 나머지
	Arithmetic01.java

대입 연산자
	Increment01.java

	대입 연산자 : =
	복합 대입 연산자 : += *= -= ..... 

증감 연산자
	++ 기호와 -- 기호
	PlusMinus01.java

int a = 10, b = 20, c ;

연산 순서
++a 또는 --a 가 가장 먼저 실행 된다.
b++ 또는 b-- 가 가장 나중에 실행 된다.
나머지는 연산자 우선 순위를 따른다.

c = ++a + b++ ;

a = a+ 1 ;
c = a + b ;
b = b + 1 ;


관계(비교) 연산자
	두 개의 데이터를 비교하는 연산자
	> < >= <= ==(equal) !=(not equal)
	반환 결과는 반드시 boolean 타입이다.
	제어문에서 반드시 사용된다.

논리 연산자
	논리곱(&&) : 두 개의 진위가 모두 참일때만 참(and 개념)
	논리합(||) : 두 개의 진위가 모두 거짓일때만 거짓(or 개념)
	부정(!) : 진위를 반전시키기

LogicalOperator.java

조건(3항) 연산자

조건식 ? 참일때 수행 영역 : 거짓일때 수행 영역 ;

int x = 3, y = 2 ;

int result = x > y ? 5 : 3 ;
x가 크면 5를, y가 크면 3을 result에 대입하시오.

Condition02.java

형변환(Casting)
암시적) jvm이 알아서 형변환 
명시적) 개발자가 스스로 형변환

int i = (int)3.14 ;
==> 실수 3.14를 정수형으로 변경해주세요.
(int)를 캐스트 연산자라고 부른다.

Casting.java


제어문 = 선택문 + 반복문 + 보조 제어문

선택문 : 
	프로그램의 흐름을 조절/순서 변경
	if, switch~case 구문

반복문 : 
	특정 내용을 반복적으로 수행하는 구문
	for, while 구문

보조 제어문
	break, continue 구문

선택문
	단순 if 구문
	양자 택일 구문
	다중 택일 구문

if 구문 골격

if(조건식){
	참일때 실행 영역
}else{
	거짓일때 실행 영역
}

If01.java

반복문
	For01.java
	1부터 10까지의 총합 : 55

int total = 0;

제어 변수 : 반복문 내에서 값이 바뀌는 변수

초기식 : i = 1
조건식 : i < 11
증감식 : i+=1, i++

for(초기식 ; 조건식 ; 증감식) {
	total += i ;
}

switch ... case 구문

switch( 값 ){
case 값1:
	실행구문1;
	[break ;]
case 값2:
	실행구문1;
	[break ;]
...
[default :]
...
}

특징
해당 case에서 종료하려면 break 키워드 사용


주사위 문제
나오는 눈금 확인하기

Switch01.java

if와 switch
	프로그램의 흐름을 제어하는 분기문

      if              switch
판단    관계/논리 연산자     값(숫자, 문자열)
개수    무한             유한

풀어 보기
89쪽 : Q2, Q3, Q4
90쪽 : Q7

106쪽